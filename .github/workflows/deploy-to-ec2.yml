name: Deploy Hello World to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      run: ./mvnw clean test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build application (for validation)
      run: ./mvnw clean package -DskipTests

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Update source code
          cd RecommendationApi
          git pull origin main

          # Stop and remove existing container
          docker stop hello-world-app || true
          docker rm hello-world-app || true
          
          # Remove old development image
          docker rmi hello-world-dev || true
          
          # Build development image from source
          docker build -f Dockerfile -t hello-world-dev .
          
          # Create Maven cache volume if it doesn't exist
          docker volume create maven-cache || true
          
          # Run new container with source mounted
          docker run -d \
            --name hello-world-app \
            --restart unless-stopped \
            -p 8080:8080 \
            -v $(pwd)/src:/app/src \
            -v $(pwd)/pom.xml:/app/pom.xml \
            -v $(pwd)/mvnw:/app/mvnw \
            -v $(pwd)/.mvn:/app/.mvn \
            -v $(pwd)/build.sh:/app/build.sh \
            -v maven-cache:/root/.m2 \
            hello-world-dev \
            bash -c "chmod +x /app/build.sh && /app/build.sh"
          
          # Wait for build and application to start
          echo "‚è≥ Waiting for build to complete..."
          sleep 60
          
          # Check if container is still running (build might have failed)
          if ! docker ps | grep -q hello-world-app; then
            echo "‚ùå Container stopped - build likely failed!"
            docker logs hello-world-app
            exit 1
          fi
          
          # Wait a bit more for application startup
          sleep 30
          
          # Verify deployment with retries
          echo "üîç Verifying deployment..."
          for i in {1..10}; do
            if curl -f http://localhost:8080/hello; then
              echo "‚úÖ Deployment successful!"
              break
            else
              echo "‚è≥ Attempt $i/10 - waiting for application..."
              if [ $i -eq 10 ]; then
                echo "‚ùå Deployment verification failed!"
                echo "üìã Container logs:"
                docker logs hello-world-app
                exit 1
              fi
              sleep 10
            fi
          done

    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üöÄ Deployment to EC2 completed successfully!"
          echo "üåê Application URL: http://${{ secrets.EC2_HOST }}:8080/hello"
          echo "üì¶ Application built from source code on server"
        else
          echo "‚ùå Deployment failed!"
        fi